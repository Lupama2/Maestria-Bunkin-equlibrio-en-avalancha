#! /bin/bash
#
# Este script puede usarse para lanzar un proceso de gpu
# Se especifica la cola gpu, se solicita una gpu y se solicita 1G RAM para el proceso
#
# Para lanzarlo copielo a un directorio en su home y en ese directorio ejecute:
# qsub ejemploGPU
#
# Los procesos en la cola gpu tienen una duración máxima de 3 días
# Los procesos en la cola gpushort tienen una duración máxima de 20 minutos
#
# El sistema de cola devuelve una variable $SGE_GPU que contiene los IDs de los dispositivos requeridos (separados por coma). Ejemplo: 0 o 0,1 dependiendo del numero de recursos pedidos
# Use este device ID para cudaSetDevice()
#
# 
# Las lineas que comienzan con #$ son opciones para el sistema de cola
# Todas explicadas en el man qsub
#
#$ -cwd
#$ -j y
#$ -S /bin/bash
#$ -q gpu@compute-6-9.local,gpu@compute-6-8.local,gpu@compute-6-10.local,gpu@compute-6-3.local,gpu@compute-6-4.local,gpu@compute-6-5.local
#$ -l gpu=1
#$ -l memoria_a_usar=1G
#$ -N output_py_gpu
#
#cargar el environment
# conda activate PythonCUDA

module load cuda/10.0.130
module load miniconda
source activate rapids-23.04
#Hacer lo anterior tmb

#Si quisiera un paquete tengo que ir a la página de CNEA  y descargar pyfahgts al final de todo.

#echo DeviceID: $SGE_GPU

#tiene que estar instalado previamente cupy

#cargar variables de entorno para encontrar cuda
# module load cuda/10.0.130 

#ejecutar el o los binarios con sus respectivos argumentos
jupyter nbconvert py_gpu_simulacion_de_particulas.ipynb --to python
python py_gpu_simulacion_de_particulas.py


