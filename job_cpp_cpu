#! /bin/bash
#
# Este script puede usarse para lanzar un proceso de gpu
# Se especifica la cola gpu, se solicita una gpu y se solicita 1G RAM para el proceso
#
# Para lanzarlo copielo a un directorio en su home y en ese directorio ejecute:
# qsub ejemploGPU
#
# Los procesos en la cola gpu tienen una duración máxima de 3 días
# Los procesos en la cola gpushort tienen una duración máxima de 20 minutos
#
# El sistema de cola devuelve una variable $SGE_GPU que contiene los IDs de los dispositivos requeridos (separados por coma). Ejemplo: 0 o 0,1 dependiendo del numero de recursos pedidos
# Use este device ID para cudaSetDevice()
#
# 
# Las lineas que comienzan con #$ son opciones para el sistema de cola
# Todas explicadas en el man qsub
#
#$ -cwd
#$ -j y
#$ -S /bin/bash
#$ -q gpushort
#$ -l gpu=1
#$ -l memoria_a_usar=1G
#$ -N output_cpp_cpu
#
#cargar variables de entorno para encontrar cuda

# module load miniconda cuda/10.0.130
# source activate tensorflow
# conda activate scikit-cuda

# echo DeviceID: $SGE_GPU

#ejecutar binario con sus respectivos argumentos
g++ -O3 cpp_cpu_simulacion_de_particulas.cpp cpp_cpu_funciones.cpp -std=c++11 -o  cpp_cpu_simulacion_de_particulas

#Imprimo características de la CPU
lscpu

#ejecuto
#1 sola vez
# ./cpp_cpu_simulacion_de_particulas
#varias veces
for N in 2 5 10 20 50 100 200 500 1000 2000 5000 10000 20000; do ./cpp_cpu_simulacion_de_particulas $N 1E-5 100 100; done

#Para hacer profiling
# g++ -pg -O3 cpp_cpu_simulacion_de_particulas.cpp cpp_cpu_funciones.cpp -std=c++11 -o  cpp_cpu_simulacion_de_particulas
# ./cpp_cpu_simulacion_de_particulas
# gprof cpp_cpu_simulacion_de_particulas gmon.out > profiling_cpp_cpu.txt
